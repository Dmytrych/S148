version: '3.8'

services:
  strapi:
    build:
      context: ../strapi
      dockerfile: Dockerfile
    container_name: strapi
    ports:
      - '1447:1447'
    volumes:
      - strapi_uploads:/usr/src/app/public/uploads
    environment:
      HOST: ${HOST}
      PORT: ${PORT}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      TELEGRAM_API_KEY: ${TELEGRAM_API_KEY}
      STRAPI_HEALTHCHECK_ENDPOINT: ${STRAPI_HEALTHCHECK_ENDPOINT}
    depends_on:
      - strapi-postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1447/api/healthcheck"]
      interval: 10s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  strapi-postgres:
    image: postgres:13-alpine
    container_name: strapi-postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi_postgres:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

volumes:
  strapi_uploads:
  strapi_postgres:
